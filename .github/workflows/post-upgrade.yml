name: Post-upgrade

on:
  workflow_dispatch:
    inputs:
      build-result:
        required: true
        description: Whether the CI run succeeded or failed

jobs:
  find-pr:
    runs-on: ubuntu-latest
    outputs:
      number: ${{steps.find-pull-request.outputs.number}}

    steps:
      - name: Format branch
        id: format-branch
        run: echo "::set-output name=branch::$(echo ${{github.ref}} | sed 's/refs\/heads\///')"

      - name: Find pull request
        id: find-pull-request
        uses: juliangruber/find-pull-request-action@v1
        with:
          branch: ${{steps.format-branch.outputs.branch}}

  success:
    runs-on: ubuntu-latest
    needs: find-pr
    if: ${{github.event.inputs.build-result == 'success'}}
    steps:
      - name: Get Reno version
        id: get-reno-version
        uses: sergeysova/jq-action@v2
        with:
          cmd: jq -r .version egg.json

      - name: Get supported Deno runtime version
        id: get-supported-deno-version
        uses: sergeysova/jq-action@v2
        with:
          cmd: jq -r .deno deno_versions.json

      - name: Get supported std version
        id: get-supported-std-version
        uses: sergeysova/jq-action@v2
        with:
          cmd: jq -r .std deno_versions.json

      - name: Merge upgrade PR
        uses: juliangruber/merge-pull-request-action@v1
        with:
          github-token: ${{secrets.UPGRADE_TOKEN}}
          number: ${{needs.find-pr.outputs.number}}
          method: squash

      - name: Checkout master
        uses: actions/checkout@v2
        with:
          branch: master

      - name: Create tag
        id: tag-version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{secrets.UPGRADE_TOKEN}}
          custom_tag: v${{steps.get-reno-version.outputs.value}}

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{steps.tag-version.outputs.new_tag}}
          name: ${{steps.tag_version.outputs.new_tag}}
          body: This is an automated compatibility release to support Deno ${{steps.get-supported-deno-version.outputs.value}} and std ${{steps.get-supported-std-version.outputs.value}}.
          token: ${{secrets.UPGRADE_TOKEN}}

  failure:
    runs-on: ubuntu-latest
    needs: find-pr
    if: ${{github.event.inputs.build-result == 'failure'}}
    steps:
    - name: Send failure email
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{secrets.BUILDBOT_EMAIL}}
        password: ${{secrets.BUILDBOT_EMAIL_PASSWORD}}
        to: hi@james.engineering
        from: Reno Buildbot
        body: "An automated attempt to upgrade Reno has failed. Please consult the generated PR and manually intervene to resolve the issue: https://github.com/reno-router/reno/pull/${{needs.find-pr.outputs.number}}"
