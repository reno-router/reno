name: Upgrade Deno runtime and std versions

on:
  push:
    branches:
      - feat/automated-upgrade

jobs:
  determine-upgrade:
    runs-on: ubuntu-latest

    outputs:
      supported-deno-version: ${{steps.supported-deno-version.outputs.value}}
      supported-std-version: ${{steps.supported-std-version.outputs.value}}
      latest-deno-version: ${{steps.latest-deno-version.outputs.release}}
      latest-std-version: ${{steps.latest-std-version.outputs.release}}
      upgrade-required: ${{steps.latest-deno-version.outputs.release > steps.supported-deno-version.outputs.value || steps.latest-std-version.outputs.release > steps.supported-std-version.outputs.value }}

    steps:
    - uses: actions/checkout@v2

    - name: Get supported Deno runtime version number
      id: supported-deno-version
      uses: sergeysova/jq-action@v2
      with:
        cmd: jq -r .deno deno_versions.json

    - name: Get supported std version number
      id: supported-std-version
      uses: sergeysova/jq-action@v2
      with:
        cmd: jq -r .std deno_versions.json

    - name: Get latest Deno runtime release
      id: latest-deno-version
      uses: pozetroninc/github-action-get-latest-release@master
      with:
        owner: denoland
        repo: deno
        excludes: prerelease, draft

    - name: Get latest std release
      id: latest-std-version
      uses: pozetroninc/github-action-get-latest-release@master
      with:
        owner: denoland
        repo: deno_std
        excludes: prerelease, draft

  upgrade:
    runs-on: ubuntu-latest
    needs: determine-upgrade
    if: ${{needs.determine-upgrade.outputs.upgrade-required}}

    steps:
    - uses: actions/checkout@v2

    - name: Upgrade Deno runtime version
      uses: sergeysova/jq-action@v2
      with:
        cmd: jq -r '.deno = "${{needs.determine-upgrade.outputs.latest-deno-version}}"' deno_versions.json > deno_versions.json

    - name: Upgrade std version
      uses: jacobtomlinson/gha-find-replace@v2
      with:
        find: "https://deno.land/std@${{needs.determine-upgrade.outputs.current-std-version}}"
        replace: "https://deno.land/std@${{needs.determine-upgrade.outputs.latest-std-version}}"
        regex: false

    # There's probably a way to achieve the next two steps with
    # one jq execution, but I can't figure it out right now.
    - name: Calculate Reno version
      id: calculate-reno-version
      uses: sergeysova/jq-action@v2
      with:
        cmd: jq -r '.version | capture("(?<major>[0-9]*)\\.(?<minor>[0-9]*)\\.(?<patch>[0-9]*)") | to_entries | map(if .key == "patch" then .value | tonumber + 1  else .value end) | join(".")' egg.json

    - name: Bump Reno version
      id: bump-reno-version
      uses: sergeysova/jq-action@v2
      with:
        cmd: jq -r '.version = ${{steps.calculate-reno-version.outputs.value}} egg.json > egg.json'

    - name: Commit and push changes
      uses: EndBug/add-and-commit@v7
      with:
        pull: NO-PULL
        author_name: James Wright
        author_email: hi@james.engineering
        branch: upgrade/${{steps.calculate-reno-version.outputs.value}}
        message: Upgrades Deno to ${{needs.determine-upgrade.outputs.latest-deno-version}} and std to ${{needs.determine-upgrade.outputs.latest-std-version}}
        push: --set-upstream origin upgrade/${{steps.calculate-reno-version.outputs.value}}